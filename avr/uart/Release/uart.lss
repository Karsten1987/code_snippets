
uart.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000076  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00000076  000000ea  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  000000ec  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000054  00000000  00000000  000007b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .comment      00000011  00000000  00000000  0000080c  2**0
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	19 c0       	rjmp	.+50     	; 0x36 <__bad_interrupt>
   4:	18 c0       	rjmp	.+48     	; 0x36 <__bad_interrupt>
   6:	17 c0       	rjmp	.+46     	; 0x36 <__bad_interrupt>
   8:	16 c0       	rjmp	.+44     	; 0x36 <__bad_interrupt>
   a:	15 c0       	rjmp	.+42     	; 0x36 <__bad_interrupt>
   c:	14 c0       	rjmp	.+40     	; 0x36 <__bad_interrupt>
   e:	13 c0       	rjmp	.+38     	; 0x36 <__bad_interrupt>
  10:	12 c0       	rjmp	.+36     	; 0x36 <__bad_interrupt>
  12:	11 c0       	rjmp	.+34     	; 0x36 <__bad_interrupt>
  14:	10 c0       	rjmp	.+32     	; 0x36 <__bad_interrupt>
  16:	0f c0       	rjmp	.+30     	; 0x36 <__bad_interrupt>
  18:	0e c0       	rjmp	.+28     	; 0x36 <__bad_interrupt>
  1a:	0d c0       	rjmp	.+26     	; 0x36 <__bad_interrupt>
  1c:	0c c0       	rjmp	.+24     	; 0x36 <__bad_interrupt>
  1e:	0b c0       	rjmp	.+22     	; 0x36 <__bad_interrupt>
  20:	0a c0       	rjmp	.+20     	; 0x36 <__bad_interrupt>
  22:	09 c0       	rjmp	.+18     	; 0x36 <__bad_interrupt>
  24:	08 c0       	rjmp	.+16     	; 0x36 <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61
  32:	12 d0       	rcall	.+36     	; 0x58 <main>
  34:	1e c0       	rjmp	.+60     	; 0x72 <_exit>

00000036 <__bad_interrupt>:
  36:	e4 cf       	rjmp	.-56     	; 0x0 <__vectors>

00000038 <initUsart>:
  38:	88 e1       	ldi	r24, 0x18	; 24
  3a:	8a b9       	out	0x0a, r24	; 10
  3c:	86 e8       	ldi	r24, 0x86	; 134
  3e:	80 bd       	out	0x20, r24	; 32
  40:	10 bc       	out	0x20, r1	; 32
  42:	87 e6       	ldi	r24, 0x67	; 103
  44:	89 b9       	out	0x09, r24	; 9
  46:	08 95       	ret

00000048 <sendChar>:
  48:	5d 9b       	sbis	0x0b, 5	; 11
  4a:	fe cf       	rjmp	.-4      	; 0x48 <sendChar>
  4c:	8c b9       	out	0x0c, r24	; 12
  4e:	08 95       	ret

00000050 <receiveChar>:
  50:	5f 9b       	sbis	0x0b, 7	; 11
  52:	fe cf       	rjmp	.-4      	; 0x50 <receiveChar>
  54:	8c b1       	in	r24, 0x0c	; 12
  56:	08 95       	ret

00000058 <main>:
  58:	ef df       	rcall	.-34     	; 0x38 <initUsart>
  5a:	2f e9       	ldi	r18, 0x9F	; 159
  5c:	86 e8       	ldi	r24, 0x86	; 134
  5e:	91 e0       	ldi	r25, 0x01	; 1
  60:	21 50       	subi	r18, 0x01	; 1
  62:	80 40       	sbci	r24, 0x00	; 0
  64:	90 40       	sbci	r25, 0x00	; 0
  66:	e1 f7       	brne	.-8      	; 0x60 <main+0x8>
  68:	00 c0       	rjmp	.+0      	; 0x6a <main+0x12>
  6a:	00 00       	nop
  6c:	8b e6       	ldi	r24, 0x6B	; 107
  6e:	ec df       	rcall	.-40     	; 0x48 <sendChar>
  70:	f4 cf       	rjmp	.-24     	; 0x5a <main+0x2>

00000072 <_exit>:
  72:	f8 94       	cli

00000074 <__stop_program>:
  74:	ff cf       	rjmp	.-2      	; 0x74 <__stop_program>
